#!/usr/bin/env python
PACKAGE = "highspeed_ctrl"
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# int_t, float_t, str_t, bool_t 
#'name', 'type', 'level', 'description', 'default', 'min', 'max'
# gen.add("pure_puresuit_turn_on", bool_t, 0, "enablePurepursuit", False)
# gen.add("modelbased_pure_puresuit_turn_on", bool_t, 0, "enable Model based Purepursuit", False)

size_enum = gen.enum([ gen.const("ctrl_turn_off",      int_t, 0, "A small constant"),
                       gen.const("purepusruit",     int_t, 1, "A medium constant"),
                       gen.const("Model_PP",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("ctrl_switch_param", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)



# gen.add("config_switch", bool_t, 0, "enable dynamic config or not", False)
gen.add("manual_target_vel", double_t, 0, "manual_target_vel", 0.0, 0.0, 10)
# gen.add("Q_eydot", double_t, 0, "Q_eydot", 5.0, 0.0, 1000)
# gen.add("Q_epsi", double_t, 0, "Q_epsi", 25.0, 0.0, 1000)
# gen.add("Q_epsidot", double_t, 0, "Q_epsidot", 1.0, 0.0, 1000)
# gen.add("R_weight", double_t, 0, "R_weight", 4500, 0.0, 8000)
# gen.add("angle_rate_limit", double_t, 0, "angle_rate_limit", 0.1, 0.0, 0.5)

# gen.add("delay_in_sec", double_t, 0, "delay_in_sec", 0.14, 0.0, 2)
# gen.add("lag_tau", double_t, 0, "lag_tau", 0.14, 0.0, 2)

exit(gen.generate(PACKAGE, "highspeed_ctrl", "test"))